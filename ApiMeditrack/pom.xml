<project xmlns="http://maven.apache.org/POM/4.0.0"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
<modelVersion>4.0.0</modelVersion>
<!--  http://maven.apache.org/pom.html#Quick_Overview  -->
<groupId>pt.tecnico.sirs.a34</groupId>
<artifactId>ApiMeditrack</artifactId>
<version>1.0.0-SNAPSHOT</version>
<packaging>jar</packaging>
<name>${project.artifactId}</name>
<properties>
    <!--  compiler properties  -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>17</java.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
    <appassembler-maven-plugin.version>2.1.0</appassembler-maven-plugin.version>
    <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
    <jaxb.version>2.3.0</jaxb.version>
    <junit.version>4.13.2</junit.version>
    <gson.version>2.10.1</gson.version>
    <!--  application properties - can be overriden in command line with -D  -->
    <p>pt.tecnico.meditrack</p>
    <c>ApiMeditrack</c>
    <mainclass>${p}.${c}</mainclass>
    <!--  arguments are defined in exec plugin  -->
</properties>
<dependencies>
    <dependency>
        <groupId>org.xerial</groupId>
        <artifactId>sqlite-jdbc</artifactId>
        <version>3.36.0.3</version> <!-- Check for the latest version on Maven Central -->
    </dependency>
    <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.17</version>
    </dependency>
    <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
    </dependency>
</dependencies>
<build>
    <plugins>
        <!--   Plugin used to compile the sources of your project. Java 9 requires at least version
        3.7.0 to properly handle modules.  -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven-compiler-plugin.version}</version>
            <configuration>
                <source>${java.version}</source>
                <target>${java.version}</target>
            </configuration>
        </plugin>
        <!--  Plugin that provides two goals to execute system and Java programs  -->
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>${exec-maven-plugin.version}</version>
            <executions>
                <execution>
                    <goals>
                        <goal>java</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <!--  to prevent deprecation warning:  -->
                <!--  <killAfter>-1</killAfter>  -->
                <mainClass>${mainclass}</mainClass>
                <arguments>
                    <!--  can be defined here with multiple argument tags, 
						or in command line with -Dexec.args="arg0 arg1 arg2"  -->
                </arguments>
            </configuration>
        </plugin>
        <!--  The Application Assembler plug-in generates scripts for starting Java applications. 
				All dependencies and the artifact of the project itself are placed in a 
				generated Maven repository in a defined assemble directory.  -->
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>appassembler-maven-plugin</artifactId>
            <version>${appassembler-maven-plugin.version}</version>
            <executions>
                <execution>
                    <phase>install</phase>
                    <goals>
                        <goal>assemble</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <programs>
                    <program>
                        <mainClass>pt.tecnico.meditrack.ApiMeditrack</mainClass>
                        <id>api_meditrack</id>
                    </program>
                </programs>
            </configuration>
        </plugin>
    </plugins>
</build>
</project>
